import { Config as SvgoConfig } from "svgo";
import { OutputData, SVGCompressionOption } from "./types.js";
/**
 * The function optimizes an SVG file asynchronously using SVGO and writes the optimized SVG to a
 * specified output file.
 *
 *                    where the optimized SVG file will be written to.
 * @param svg         The SVG file to optimize
 * @param svgoOptions `svgoOptions` is an object that contains settings for optimizing
 *                    the SVG using SVGO (SVG Optimizer). These settings can include things like removing
 *                    comments, removing empty groups, and optimizing path data. The specific settings and
 *                    their values will depend on the desired optimization settings.
 */
export declare function optimizeSvg(svg: string, svgoOptions: SvgoConfig): string;
/**
 * Encodes an SVG file, optimizes it, and saves it to a destination directory.
 *
 * @param srcFilename - The path to the SVG file.
 * @param distFileName - The path to the destination file.
 * @param {SvgoPluginConfig[] | undefined} options - Optional Svgo plugin configurations.
 * @return {Promise<Metadata>} A promise that resolves with the metadata of the optimized image.
 */
export declare function encodeSvg(srcFilename: string, distFileName: string, options: SVGCompressionOption): Promise<OutputData>;
