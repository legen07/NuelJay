import t from"prompts";import{distDirQuestion as p,promptsToAsk as a,srcDirQuestion as m,toggleQuestion as c}from"./options.js";import{defaultCompressionOptions as f,getImageFormatsInFolder as u,logMessage as e}from"./utils.js";async function w(o){if(!o.srcDir){const s=await t(m);o.srcDir=s.srcDir}if(!o.distDir){const s=await t(p);o.distDir=s.distDir}const r=u(o.srcDir);if(r.length)e(`Found ${r.length} image formats in the source directory, `+r.join(", "),!0);else throw new Error("No image formats found in the source directory, aborting");return(await t(c))?.loadDefaults!==!1?o.compressionOptions=await new Promise(s=>{s(f(r))}):o.compressionOptions=await g(r,o.verbose),o}async function g(o,r=!1){const i={};for(const s of o){e("==".concat(s,"=="),r);const n=await t(a(s));if(!n.compressor){e(`Skipping ${s} files...`,r);continue}i[s]=n}return i}export{g as getImageCompressionOptions,w as getPromptOptions};
